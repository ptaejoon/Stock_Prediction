import pymysql
import datetime
import numpy as np

real_arr = np.load('real_2019.npy')
real_arr = real_arr.reshape((-1, 159, 4))

arr = np.load('predicted_2019.npy')
arr = arr.reshape((-1, 159, 4))

corps = [('006840', 'AK홀딩스'), ('001040', 'CJ'), ('079160', 'CJ CGV'), ('000120', 'CJ대한통운'), ('097950', 'CJ제일제당'),
             ('005830', 'DB손해보험'), ('000990', 'DB하이텍'), ('114090', 'GKL'), ('078930', 'GS'), ('006360', 'GS건설'),
             ('012630', 'HDC'), ('001060', 'JW중외제약'), ('096760', 'JW홀딩스'), ('105560', 'KB금융'), ('002380', 'KCC'),
             ('030200', 'KT'), ('033780', 'KT&G'), ('093050', 'LF'), ('003550', 'LG'), ('034220', 'LG디스플레이'),
             ('001120', 'LG상사'), ('051900', 'LG생활건강'), ('032640', 'LG유플러스'), ('011070', 'LG이노텍'), ('066570', 'LG전자'),
             ('108670', 'LG하우시스'), ('051910', 'LG화학'), ('006260', 'LS'), ('010120', 'LS산전'), ('035420', 'NAVER'),
             ('005940', 'NH투자증권'), ('010060', 'OCI'), ('005490', 'POSCO'), ('064960', 'S&T모티브'), ('010950', 'S-Oil'),
             ('034730', 'SK'), ('011790', 'SKC'), ('001740', 'SK네트웍스'), ('006120', 'SK디스커버리'), ('096770', 'SK이노베이션'),
             ('017670', 'SK텔레콤'), ('000660', 'SK하이닉스'), ('005610', 'SPC삼립'), ('035250', '강원랜드'), ('010130', '고려아연'),
             ('002240', '고려제강'), ('011780', '금호석유'), ('073240', '금호타이어'), ('000270', '기아차'), ('024110', '기업은행'),
             ('003920', '남양유업'), ('025860', '남해화학'), ('002350', '넥센타이어'), ('006280', '녹십자'), ('005250', '녹십자홀딩스'),
             ('004370', '농심'), ('019680', '대교'), ('008060', '대덕전자'), ('000210', '대림산업'), ('001680', '대상'),
             ('047040', '대우건설'), ('042660', '대우조선해양'), ('069620', '대웅제약'), ('006650', '대한유화'), ('003490', '대한항공'),
             ('001230', '동국제강'), ('026960', '동서'), ('000640', '동아쏘시오홀딩스'), ('001520', '동양'), ('049770', '동원F&B'),
             ('014820', '동원시스템즈'), ('000150', '두산'), ('042670', '두산인프라코어'), ('034020', '두산중공업'), ('023530', '롯데쇼핑'),
             ('004000', '롯데정밀화학'), ('004990', '롯데지주'), ('005300', '롯데칠성'), ('011170', '롯데케미칼'), ('002270', '롯데푸드'),
             ('008560', '메리츠종금증권'), ('006800', '미래에셋대우'), ('003850', '보령제약'), ('003000', '부광약품'), ('005180', '빙그레'),
             ('006400', '삼성SDI'), ('028050', '삼성엔지니어링'), ('009150', '삼성전기'), ('005930', '삼성전자'), ('010140', '삼성중공업'),
             ('016360', '삼성증권'), ('029780', '삼성카드'), ('000810', '삼성화재'), ('000070', '삼양홀딩스'), ('004490', '세방전지'),
             ('001430', '세아베스틸'), ('068270', '셀트리온'), ('004170', '신세계'), ('055550', '신한지주'), ('003410', '쌍용양회'),
             ('003620', '쌍용차'), ('002790', '아모레G'), ('090430', '아모레퍼시픽'), ('010780', '아이에스동서'), ('005850', '에스엘'),
             ('012750', '에스원'), ('036570', '엔씨소프트'), ('111770', '영원무역'), ('003520', '영진약품'), ('000670', '영풍'),
             ('007310', '오뚜기'), ('001800', '오리온홀딩스'), ('021240', '웅진코웨이'), ('014830', '유니드'), ('000100', '유한양행'),
             ('007570', '일양약품'), ('030000', '제일기획'), ('035720', '카카오'), ('003240', '태광산업'), ('028670', '팬오션'),
             ('047050', '포스코인터내셔널'), ('103140', '풍산'), ('086790', '하나금융지주'), ('000080', '하이트진로'), ('036460', '한국가스공사'),
             ('071050', '한국금융지주'), ('025540', '한국단자'), ('002960', '한국쉘석유'), ('015760', '한국전력'), ('009540', '한국조선해양'),
             ('000240', '한국테크놀로지그룹'), ('008930', '한미사이언스'), ('009240', '한샘'), ('020000', '한섬'), ('105630', '한세실업'),
             ('014680', '한솔케미칼'), ('018880', '한온시스템'), ('009420', '한올바이오파마'), ('006390', '한일현대시멘트'),
             ('051600', '한전KPS'), ('052690', '한전기술'), ('000880', '한화'), ('012450', '한화에어로스페이스'), ('009830', '한화케미칼'),
             ('000720', '현대건설'), ('005440', '현대그린푸드'), ('086280', '현대글로비스'), ('079430', '현대리바트'), ('012330', '현대모비스'),
             ('010620', '현대미포조선'), ('069960', '현대백화점'), ('017800', '현대엘리베이'), ('004020', '현대제철'), ('005380', '현대차'),
             ('001450', '현대해상'), ('008770', '호텔신라'), ('004800', '효성'), ('093370', '후성'), ('069260', '휴켐스')]

sql = 'select close_price, trade_time from stock where corp_name = "%s" and trade_time <= "20191230" and trade_time >= "20190117"'
conn = pymysql.connect(host='localhost', user = 'sinunu', password='1q2w3e4r', db='mydb', charset='utf8')
curs = conn.cursor()

for i in range(len(corps)):
    corps[i] = list(corps[i])

gijun = 1.0033
what = 0
for i, corp in enumerate(corps):
    curs.execute(sql%corp[1])
    dbresult = curs.fetchall()
    trade_num = 0
    for a in range(4):
        corp.append(0.0)
    for a in range(9):
        corp.append(0)
    for j in range(235):
        corp[2] += abs(arr[j][i][0] - real_arr[j][i][0])
        corp[3] += abs(arr[j][i][1] - real_arr[j][i][1])
        corp[4] += abs(arr[j][i][2] - real_arr[j][i][2])
        corp[5] += abs(arr[j][i][3] - real_arr[j][i][3])
        if (arr[j][i][what] > gijun and real_arr[j][i][what] > gijun) or (arr[j][i][what] <= gijun and real_arr[j][i][what] <= gijun):
            corp[6] += 1
        if (arr[j][i][what] > gijun and real_arr[j][i][what] > gijun):
            corp[7] += 1
        if real_arr[j][i][what] > gijun:
            corp[8] += 1
        if (arr[j][i][what] > gijun and real_arr[j][i][what] <= gijun):
            corp[9] += 1
        if arr[j][i][what] > gijun:
            corp[10] += 1
        if corp[10] == 0:
            corp[11] = 0
        else:
            corp[11] = round((corp[10]-corp[9])/corp[10] * 100, 2)
        if arr[j][i][what] > real_arr[j][i][1] * gijun and real_arr[j][i][1] != 0:
            corp[12] += real_arr[j][i][what] - real_arr[j][i][1] * gijun
            corp[13] += (real_arr[j][i][what] - real_arr[j][i][1] * gijun) * dbresult[j][0]
            trade_num += 1

            if corp[1] == "고려제강"
                print(dbresult[j][1] + datetime.timedelta(days=1), round((real_arr[j][i][what] - real_arr[j][i][1]) * 100,2), "%")
        corp[14] = trade_num

    corp[2]  = corp[2] / 235 * 100
    corp[3]  = corp[2] / 235 * 100
    corp[4]  = corp[4] / 235 * 100
    corp[5]  = corp[5] / 235 * 100
    corp[12] = corp[12] * 100

corps.sort(key = lambda x : x[12])
for corp in corps:
    print(corp[:6])
    print("방향맞춤:", corp[6], "/ 오름 맞춤", corp[7], "/ 오른날", corp[8],
            "/오름예측실제내림", corp[9], "/오름예측", corp[10],
            "/오름맞출확률", corp[11], "%", "/실제구매회수", corp[14],"/ model 수익률", round(corp[12],2),"%", "/ 실제 수익", round(corp[13]), "원")
total_profit = 0

for i in range(79, len(corps)):
    total_profit += corps[i][12]

print(round(total_profit), "%")
